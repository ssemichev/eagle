eagle-service {
  name = "eagle-people-api"
  version = "v1"
}

# Options: OFF, ERROR, WARNING, INFO, DEBUG
akka-loglevel = "DEBUG"
akka-loglevel = ${?AKKA_LOGLEVEL}

akka {
  loglevel = ${akka-loglevel}
  log-dead-letters = 10
  log-dead-letters-during-shutdown = on
}

akka.http {
  server {
    idle-timeout = 60 s
    request-timeout = 120 s
    max-connections = 1024
  }

  client {
    connecting-timeout = 120 s
  }

  host-connection-pool {
    max-connections = 1024
    max-retries = 3
    max-open-requests = 16384
  }
}

search-user-name = "search-user"
search-user-name = ${?HTTP_SEARCH_USER_NAME}

search-user-password = "search-password"
search-user-password = ${?HTTP_SEARCH_USER_PASSWORD}

http {
  interface = "0.0.0.0"
  port = 9000
  search-user-name = ${search-user-name}
  search-user-password = ${search-user-password}
}

es-voter-data-cluster-name = "elasticsearch"
es-voter-data-cluster-name = ${?ES_VOTER_DATA_CLUSTER_NAME}

//must be in format elasticsearch://host:port,host:port,... or host:port,host:port,...
es-voter-data-cluster-uri = "localhost:9300"
es-voter-data-cluster-uri = ${?ES_VOTER_DATA_CLUSTER_URI}

es-people-index = "es_people_dev"
es-people-index = ${?ES_PEOPLE_INDEX}

elastic4s {
  clusters {
    voter-data {
      type: "transport"
      cluster.name: ${es-voter-data-cluster-name}
      uri: ${es-voter-data-cluster-uri}
      client.transport.sniff: true
    }

  }
  index-and-types {
    people {
      index: ${es-people-index}
      type: "person"
    }
  }
}